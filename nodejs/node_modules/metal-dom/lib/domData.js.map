{"version":3,"sources":["../src/domData.js"],"names":["METAL_DATA","domData","element","name","initialValue","value"],"mappings":"AAAA;;;;;;;;AAEA;;;;AAEA,IAAMA,aAAa,gBAAnB;;AAEA;;;;IAGMC,O;;;;;;;;AACL;;;;;;;;sBAQWC,O,EAASC,I,EAAMC,Y,EAAc;AACvC,OAAI,CAACF,QAAQF,UAAR,CAAL,EAA0B;AACzBE,YAAQF,UAAR,IAAsB,EAAtB;AACA;AACD,OAAI,CAACG,IAAL,EAAW;AACV,WAAOD,QAAQF,UAAR,CAAP;AACA;AACD,OAAI,CAAC,kBAAME,QAAQF,UAAR,EAAoBG,IAApB,CAAN,CAAD,IAAqC,kBAAMC,YAAN,CAAzC,EAA8D;AAC7DF,YAAQF,UAAR,EAAoBG,IAApB,IAA4BC,YAA5B;AACA;AACD,UAAOF,QAAQF,UAAR,EAAoBG,IAApB,CAAP;AACA;;AAED;;;;;;;;sBAKWD,O,EAAS;AACnB,UAAO,CAAC,CAACA,QAAQF,UAAR,CAAT;AACA;;AAED;;;;;;;;;;sBAOWE,O,EAASC,I,EAAME,K,EAAO;AAChC,OAAI,CAACH,QAAQF,UAAR,CAAL,EAA0B;AACzBE,YAAQF,UAAR,IAAsB,EAAtB;AACA;AACD,OAAI,CAACG,IAAD,IAAS,CAAC,kBAAME,KAAN,CAAd,EAA4B;AAC3B,WAAOH,QAAQF,UAAR,CAAP;AACA;AACDE,WAAQF,UAAR,EAAoBG,IAApB,IAA4BE,KAA5B;AACA,UAAOH,QAAQF,UAAR,EAAoBG,IAApB,CAAP;AACA;;;;;;kBAGaF,O","file":"domData.js","sourcesContent":["'use strict';\n\nimport {isDef} from 'metal';\n\nconst METAL_DATA = '__metal_data__';\n\n/**\n * Set of utilities for dom data operations\n */\nclass domData {\n\t/**\n\t * Gets Metal.js's data for the given element.\n\t * @param {!Element} element\n\t * @param {string=} name Optional property from the data to be returned.\n\t * @param {*=} initialValue Optional value to the set the requested property\n\t *     to if it doesn't exist yet in the data.\n\t * @return {!Object}\n\t */\n\tstatic get(element, name, initialValue) {\n\t\tif (!element[METAL_DATA]) {\n\t\t\telement[METAL_DATA] = {};\n\t\t}\n\t\tif (!name) {\n\t\t\treturn element[METAL_DATA];\n\t\t}\n\t\tif (!isDef(element[METAL_DATA][name]) && isDef(initialValue)) {\n\t\t\telement[METAL_DATA][name] = initialValue;\n\t\t}\n\t\treturn element[METAL_DATA][name];\n\t}\n\n\t/**\n\t * Checks if the given element has data stored in it.\n\t * @param {!Element} element\n\t * @return {boolean}\n\t */\n\tstatic has(element) {\n\t\treturn !!element[METAL_DATA];\n\t}\n\n\t/**\n\t * Sets Metal.js's data for the given element.\n\t * @param {!Element} element\n\t * @param {string=} name Property from the data to be set.\n\t * @param {*=} value Value to be set on the element.\n\t * @return {!Object|*}\n\t */\n\tstatic set(element, name, value) {\n\t\tif (!element[METAL_DATA]) {\n\t\t\telement[METAL_DATA] = {};\n\t\t}\n\t\tif (!name || !isDef(value)) {\n\t\t\treturn element[METAL_DATA];\n\t\t}\n\t\telement[METAL_DATA][name] = value;\n\t\treturn element[METAL_DATA][name];\n\t}\n}\n\nexport default domData;\n"]}